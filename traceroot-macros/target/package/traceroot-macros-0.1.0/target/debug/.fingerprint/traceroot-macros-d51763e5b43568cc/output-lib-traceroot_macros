{"$message_type":"diagnostic","message":"unresolved import `syn::NestedMeta`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":110,"byte_end":120,"line_start":3,"line_end":3,"column_start":64,"column_end":74,"is_primary":true,"text":[{"text":"use syn::{parse_macro_input, ItemFn, Lit, Meta, MetaNameValue, NestedMeta};","highlight_start":64,"highlight_end":74}],"label":"no `NestedMeta` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `syn::NestedMeta`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:3:64\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse syn::{parse_macro_input, ItemFn, Lit, Meta, MetaNameValue, NestedMeta};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `NestedMeta` in the root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `AttributeArgs` in crate `syn`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.105\\src\\macros.rs","byte_start":1028,"byte_end":1052,"line_start":36,"line_end":36,"column_start":22,"column_end":46,"is_primary":false,"text":[{"text":"        $(#[$attr])* $pub $struct $name $body","highlight_start":22,"highlight_end":46}],"label":"similarly named struct `Attribute` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.105\\src\\attr.rs","byte_start":469,"byte_end":6261,"line_start":19,"line_end":179,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"ast_struct! {","highlight_start":1,"highlight_end":1},{"text":"    /// An attribute, like `#[repr(transparent)]`.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// <br>","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// # Syntax","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// Rust has six types of attributes.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// - Outer attributes like `#[repr(transparent)]`. These appear outside or","highlight_start":1,"highlight_end":1},{"text":"    ///   in front of the item they describe.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// - Inner attributes like `#![feature(proc_macro)]`. These appear inside","highlight_start":1,"highlight_end":1},{"text":"    ///   of the item they describe, usually a module.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// - Outer one-line doc comments like `/// Example`.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// - Inner one-line doc comments like `//! Please file an issue`.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// - Outer documentation blocks `/** Example */`.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// - Inner documentation blocks `/*! Please file an issue */`.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// The `style` field of type `AttrStyle` distinguishes whether an attribute","highlight_start":1,"highlight_end":1},{"text":"    /// is outer or inner.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// Every attribute has a `path` that indicates the intended interpretation","highlight_start":1,"highlight_end":1},{"text":"    /// of the rest of the attribute's contents. The path and the optional","highlight_start":1,"highlight_end":1},{"text":"    /// additional contents are represented together in the `meta` field of the","highlight_start":1,"highlight_end":1},{"text":"    /// attribute in three possible varieties:","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// - Meta::Path &mdash; attributes whose information content conveys just a","highlight_start":1,"highlight_end":1},{"text":"    ///   path, for example the `#[test]` attribute.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// - Meta::List &mdash; attributes that carry arbitrary tokens after the","highlight_start":1,"highlight_end":1},{"text":"    ///   path, surrounded by a delimiter (parenthesis, bracket, or brace). For","highlight_start":1,"highlight_end":1},{"text":"    ///   example `#[derive(Copy)]` or `#[precondition(x < 5)]`.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// - Meta::NameValue &mdash; attributes with an `=` sign after the path,","highlight_start":1,"highlight_end":1},{"text":"    ///   followed by a Rust expression. For example `#[path =","highlight_start":1,"highlight_end":1},{"text":"    ///   \"sys/windows.rs\"]`.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// All doc comments are represented in the NameValue style with a path of","highlight_start":1,"highlight_end":1},{"text":"    /// \"doc\", as this is how they are processed by the compiler and by","highlight_start":1,"highlight_end":1},{"text":"    /// `macro_rules!` macros.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// ```text","highlight_start":1,"highlight_end":1},{"text":"    /// #[derive(Copy, Clone)]","highlight_start":1,"highlight_end":1},{"text":"    ///   ~~~~~~Path","highlight_start":1,"highlight_end":1},{"text":"    ///   ^^^^^^^^^^^^^^^^^^^Meta::List","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// #[path = \"sys/windows.rs\"]","highlight_start":1,"highlight_end":1},{"text":"    ///   ~~~~Path","highlight_start":1,"highlight_end":1},{"text":"    ///   ^^^^^^^^^^^^^^^^^^^^^^^Meta::NameValue","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// #[test]","highlight_start":1,"highlight_end":1},{"text":"    ///   ^^^^Meta::Path","highlight_start":1,"highlight_end":1},{"text":"    /// ```","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// <br>","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// # Parsing from tokens to Attribute","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// This type does not implement the [`Parse`] trait and thus cannot be","highlight_start":1,"highlight_end":1},{"text":"    /// parsed directly by [`ParseStream::parse`]. Instead use","highlight_start":1,"highlight_end":1},{"text":"    /// [`ParseStream::call`] with one of the two parser functions","highlight_start":1,"highlight_end":1},{"text":"    /// [`Attribute::parse_outer`] or [`Attribute::parse_inner`] depending on","highlight_start":1,"highlight_end":1},{"text":"    /// which you intend to parse.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// [`Parse`]: crate::parse::Parse","highlight_start":1,"highlight_end":1},{"text":"    /// [`ParseStream::parse`]: crate::parse::ParseBuffer::parse","highlight_start":1,"highlight_end":1},{"text":"    /// [`ParseStream::call`]: crate::parse::ParseBuffer::call","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// ```","highlight_start":1,"highlight_end":1},{"text":"    /// use syn::{Attribute, Ident, Result, Token};","highlight_start":1,"highlight_end":1},{"text":"    /// use syn::parse::{Parse, ParseStream};","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// // Parses a unit struct with attributes.","highlight_start":1,"highlight_end":1},{"text":"    /// //","highlight_start":1,"highlight_end":1},{"text":"    /// //     #[path = \"s.tmpl\"]","highlight_start":1,"highlight_end":1},{"text":"    /// //     struct S;","highlight_start":1,"highlight_end":1},{"text":"    /// struct UnitStruct {","highlight_start":1,"highlight_end":1},{"text":"    ///     attrs: Vec<Attribute>,","highlight_start":1,"highlight_end":1},{"text":"    ///     struct_token: Token![struct],","highlight_start":1,"highlight_end":1},{"text":"    ///     name: Ident,","highlight_start":1,"highlight_end":1},{"text":"    ///     semi_token: Token![;],","highlight_start":1,"highlight_end":1},{"text":"    /// }","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// impl Parse for UnitStruct {","highlight_start":1,"highlight_end":1},{"text":"    ///     fn parse(input: ParseStream) -> Result<Self> {","highlight_start":1,"highlight_end":1},{"text":"    ///         Ok(UnitStruct {","highlight_start":1,"highlight_end":1},{"text":"    ///             attrs: input.call(Attribute::parse_outer)?,","highlight_start":1,"highlight_end":1},{"text":"    ///             struct_token: input.parse()?,","highlight_start":1,"highlight_end":1},{"text":"    ///             name: input.parse()?,","highlight_start":1,"highlight_end":1},{"text":"    ///             semi_token: input.parse()?,","highlight_start":1,"highlight_end":1},{"text":"    ///         })","highlight_start":1,"highlight_end":1},{"text":"    ///     }","highlight_start":1,"highlight_end":1},{"text":"    /// }","highlight_start":1,"highlight_end":1},{"text":"    /// ```","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// <p><br></p>","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// # Parsing from Attribute to structured arguments","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// The grammar of attributes in Rust is very flexible, which makes the","highlight_start":1,"highlight_end":1},{"text":"    /// syntax tree not that useful on its own. In particular, arguments of the","highlight_start":1,"highlight_end":1},{"text":"    /// `Meta::List` variety of attribute are held in an arbitrary `tokens:","highlight_start":1,"highlight_end":1},{"text":"    /// TokenStream`. Macros are expected to check the `path` of the attribute,","highlight_start":1,"highlight_end":1},{"text":"    /// decide whether they recognize it, and then parse the remaining tokens","highlight_start":1,"highlight_end":1},{"text":"    /// according to whatever grammar they wish to require for that kind of","highlight_start":1,"highlight_end":1},{"text":"    /// attribute. Use [`parse_args()`] to parse those tokens into the expected","highlight_start":1,"highlight_end":1},{"text":"    /// data structure.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// [`parse_args()`]: Attribute::parse_args","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// <p><br></p>","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// # Doc comments","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// The compiler transforms doc comments, such as `/// comment` and `/*!","highlight_start":1,"highlight_end":1},{"text":"    /// comment */`, into attributes before macros are expanded. Each comment is","highlight_start":1,"highlight_end":1},{"text":"    /// expanded into an attribute of the form `#[doc = r\"comment\"]`.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// As an example, the following `mod` items are expanded identically:","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// ```","highlight_start":1,"highlight_end":1},{"text":"    /// # use syn::{ItemMod, parse_quote};","highlight_start":1,"highlight_end":1},{"text":"    /// let doc: ItemMod = parse_quote! {","highlight_start":1,"highlight_end":1},{"text":"    ///     /// Single line doc comments","highlight_start":1,"highlight_end":1},{"text":"    ///     /// We write so many!","highlight_start":1,"highlight_end":1},{"text":"    ///     /**","highlight_start":1,"highlight_end":1},{"text":"    ///      * Multi-line comments...","highlight_start":1,"highlight_end":1},{"text":"    ///      * May span many lines","highlight_start":1,"highlight_end":1},{"text":"    ///      */","highlight_start":1,"highlight_end":1},{"text":"    ///     mod example {","highlight_start":1,"highlight_end":1},{"text":"    ///         //! Of course, they can be inner too","highlight_start":1,"highlight_end":1},{"text":"    ///         /*! And fit in a single line */","highlight_start":1,"highlight_end":1},{"text":"    ///     }","highlight_start":1,"highlight_end":1},{"text":"    /// };","highlight_start":1,"highlight_end":1},{"text":"    /// let attr: ItemMod = parse_quote! {","highlight_start":1,"highlight_end":1},{"text":"    ///     #[doc = r\" Single line doc comments\"]","highlight_start":1,"highlight_end":1},{"text":"    ///     #[doc = r\" We write so many!\"]","highlight_start":1,"highlight_end":1},{"text":"    ///     #[doc = r\"","highlight_start":1,"highlight_end":1},{"text":"    ///      * Multi-line comments...","highlight_start":1,"highlight_end":1},{"text":"    ///      * May span many lines","highlight_start":1,"highlight_end":1},{"text":"    ///      \"]","highlight_start":1,"highlight_end":1},{"text":"    ///     mod example {","highlight_start":1,"highlight_end":1},{"text":"    ///         #![doc = r\" Of course, they can be inner too\"]","highlight_start":1,"highlight_end":1},{"text":"    ///         #![doc = r\" And fit in a single line \"]","highlight_start":1,"highlight_end":1},{"text":"    ///     }","highlight_start":1,"highlight_end":1},{"text":"    /// };","highlight_start":1,"highlight_end":1},{"text":"    /// assert_eq!(doc, attr);","highlight_start":1,"highlight_end":1},{"text":"    /// ```","highlight_start":1,"highlight_end":1},{"text":"    #[cfg_attr(docsrs, doc(cfg(any(feature = \"full\", feature = \"derive\"))))]","highlight_start":1,"highlight_end":1},{"text":"    pub struct Attribute {","highlight_start":1,"highlight_end":1},{"text":"        pub pound_token: Token![#],","highlight_start":1,"highlight_end":1},{"text":"        pub style: AttrStyle,","highlight_start":1,"highlight_end":1},{"text":"        pub bracket_token: token::Bracket,","highlight_start":1,"highlight_end":1},{"text":"        pub meta: Meta,","highlight_start":1,"highlight_end":1},{"text":"    }","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"ast_struct!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.105\\src\\macros.rs","byte_start":112,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! ast_struct {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\lib.rs","byte_start":344,"byte_end":357,"line_start":8,"line_end":8,"column_start":55,"column_end":68,"is_primary":true,"text":[{"text":"    let args_parsed = parse_macro_input!(args as syn::AttributeArgs);","highlight_start":55,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":344,"byte_end":357,"line_start":8,"line_end":8,"column_start":55,"column_end":68,"is_primary":true,"text":[{"text":"    let args_parsed = parse_macro_input!(args as syn::AttributeArgs);","highlight_start":55,"highlight_end":68}],"label":null,"suggested_replacement":"Attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `AttributeArgs` in crate `syn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:8:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let args_parsed = parse_macro_input!(args as syn::AttributeArgs);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a struct with a similar name exists: `Attribute`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.105\\src\\attr.rs:19:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mast_struct! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// An attribute, like `#[repr(transparent)]`.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// <br>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named struct `Attribute` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":655,"byte_end":666,"line_start":17,"line_end":17,"column_start":28,"column_end":39,"is_primary":true,"text":[{"text":"                    if let Lit::Str(s) = value {","highlight_start":28,"highlight_end":39}],"label":"expected `Expr`, found `Lit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":669,"byte_end":674,"line_start":17,"line_end":17,"column_start":42,"column_end":47,"is_primary":false,"text":[{"text":"                    if let Lit::Str(s) = value {","highlight_start":42,"highlight_end":47}],"label":"this expression has type `syn::Expr`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:17:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Lit::Str(s) = value {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis expression has type `syn::Expr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Expr`, found `Lit`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":831,"byte_end":843,"line_start":21,"line_end":21,"column_start":28,"column_end":40,"is_primary":true,"text":[{"text":"                    if let Lit::Bool(b) = value {","highlight_start":28,"highlight_end":40}],"label":"expected `Expr`, found `Lit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":846,"byte_end":851,"line_start":21,"line_end":21,"column_start":43,"column_end":48,"is_primary":false,"text":[{"text":"                    if let Lit::Bool(b) = value {","highlight_start":43,"highlight_end":48}],"label":"this expression has type `syn::Expr`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:21:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Lit::Bool(b) = value {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis expression has type `syn::Expr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Expr`, found `Lit`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":32588,"byte_end":32596,"line_start":916,"line_end":916,"column_start":49,"column_end":57,"is_primary":true,"text":[{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":49,"highlight_end":57}],"label":"expected `HasIterator`, found `ThereIsNoIteratorInRepetition`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30189,"byte_end":30261,"line_start":860,"line_end":860,"column_start":13,"column_end":85,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!{$tokens $b3 $b2 $b1 $curr $a1 $a2 $a3}","highlight_start":13,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29097,"byte_end":29396,"line_start":821,"line_end":829,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!{$tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":18136,"byte_end":18173,"line_start":520,"line_end":520,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            $crate::quote_each_token!{_s $($tt)*}","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":37404,"byte_end":37430,"line_start":1027,"line_end":1027,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":33981,"byte_end":34016,"line_start":948,"line_end":948,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        $crate::quote_token!{$curr $tokens}","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30189,"byte_end":30261,"line_start":860,"line_end":860,"column_start":13,"column_end":85,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!{$tokens $b3 $b2 $b1 $curr $a1 $a2 $a3}","highlight_start":13,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29097,"byte_end":29396,"line_start":821,"line_end":829,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!{$tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":18136,"byte_end":18173,"line_start":520,"line_end":520,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            $crate::quote_each_token!{_s $($tt)*}","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":37404,"byte_end":37430,"line_start":1027,"line_end":1027,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":33981,"byte_end":34016,"line_start":948,"line_end":948,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        $crate::quote_token!{$curr $tokens}","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30189,"byte_end":30261,"line_start":860,"line_end":860,"column_start":13,"column_end":85,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!{$tokens $b3 $b2 $b1 $curr $a1 $a2 $a3}","highlight_start":13,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29097,"byte_end":29396,"line_start":821,"line_end":829,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!{$tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":18136,"byte_end":18173,"line_start":520,"line_end":520,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            $crate::quote_each_token!{_s $($tt)*}","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1251,"byte_end":1298,"line_start":38,"line_end":38,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        quote! { format!(\"{:?}\", (#(&#sig.inputs),*)) }","highlight_start":9,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":17222,"byte_end":17240,"line_start":492,"line_end":492,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    macro_rules! quote {","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29020,"byte_end":29049,"line_start":819,"line_end":819,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29978,"byte_end":30016,"line_start":853,"line_end":853,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30772,"byte_end":30809,"line_start":883,"line_end":883,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":36993,"byte_end":37017,"line_start":1014,"line_end":1014,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":17222,"byte_end":17240,"line_start":492,"line_end":492,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    macro_rules! quote {","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29020,"byte_end":29049,"line_start":819,"line_end":819,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29978,"byte_end":30016,"line_start":853,"line_end":853,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30772,"byte_end":30809,"line_start":883,"line_end":883,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":36993,"byte_end":37017,"line_start":1014,"line_end":1014,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":17222,"byte_end":17240,"line_start":492,"line_end":492,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    macro_rules! quote {","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29020,"byte_end":29049,"line_start":819,"line_end":819,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29978,"byte_end":30016,"line_start":853,"line_end":853,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30772,"byte_end":30809,"line_start":883,"line_end":883,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":32555,"byte_end":32585,"line_start":916,"line_end":916,"column_start":16,"column_end":46,"is_primary":false,"text":[{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":16,"highlight_end":46}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30189,"byte_end":30261,"line_start":860,"line_end":860,"column_start":13,"column_end":85,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!{$tokens $b3 $b2 $b1 $curr $a1 $a2 $a3}","highlight_start":13,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29097,"byte_end":29396,"line_start":821,"line_end":829,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!{$tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":18136,"byte_end":18173,"line_start":520,"line_end":520,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            $crate::quote_each_token!{_s $($tt)*}","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":37404,"byte_end":37430,"line_start":1027,"line_end":1027,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":33981,"byte_end":34016,"line_start":948,"line_end":948,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        $crate::quote_token!{$curr $tokens}","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30189,"byte_end":30261,"line_start":860,"line_end":860,"column_start":13,"column_end":85,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!{$tokens $b3 $b2 $b1 $curr $a1 $a2 $a3}","highlight_start":13,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29097,"byte_end":29396,"line_start":821,"line_end":829,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!{$tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":18136,"byte_end":18173,"line_start":520,"line_end":520,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            $crate::quote_each_token!{_s $($tt)*}","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":37404,"byte_end":37430,"line_start":1027,"line_end":1027,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":33981,"byte_end":34016,"line_start":948,"line_end":948,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        $crate::quote_token!{$curr $tokens}","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30189,"byte_end":30261,"line_start":860,"line_end":860,"column_start":13,"column_end":85,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!{$tokens $b3 $b2 $b1 $curr $a1 $a2 $a3}","highlight_start":13,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29097,"byte_end":29396,"line_start":821,"line_end":829,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!{$tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":18136,"byte_end":18173,"line_start":520,"line_end":520,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            $crate::quote_each_token!{_s $($tt)*}","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1251,"byte_end":1298,"line_start":38,"line_end":38,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        quote! { format!(\"{:?}\", (#(&#sig.inputs),*)) }","highlight_start":9,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":17222,"byte_end":17240,"line_start":492,"line_end":492,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    macro_rules! quote {","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29020,"byte_end":29049,"line_start":819,"line_end":819,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29978,"byte_end":30016,"line_start":853,"line_end":853,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30772,"byte_end":30809,"line_start":883,"line_end":883,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":36993,"byte_end":37017,"line_start":1014,"line_end":1014,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":17222,"byte_end":17240,"line_start":492,"line_end":492,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    macro_rules! quote {","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29020,"byte_end":29049,"line_start":819,"line_end":819,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29978,"byte_end":30016,"line_start":853,"line_end":853,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30772,"byte_end":30809,"line_start":883,"line_end":883,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":36993,"byte_end":37017,"line_start":1014,"line_end":1014,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":17222,"byte_end":17240,"line_start":492,"line_end":492,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    macro_rules! quote {","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29020,"byte_end":29049,"line_start":819,"line_end":819,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29978,"byte_end":30016,"line_start":853,"line_end":853,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30772,"byte_end":30809,"line_start":883,"line_end":883,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":25432,"byte_end":25445,"line_start":734,"line_end":734,"column_start":25,"column_end":38,"is_primary":false,"text":[{"text":"        let $has_iter = $has_iter | i;","highlight_start":25,"highlight_end":38}],"label":"here the type of `has_iter` is inferred to be `ThereIsNoIteratorInRepetition`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":25052,"byte_end":25083,"line_start":721,"line_end":721,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        $crate::$call!($($extra)* $var);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":24457,"byte_end":24515,"line_start":700,"line_end":700,"column_start":13,"column_end":71,"is_primary":false,"text":[{"text":"            $crate::pounded_var_with_context!{$call! $extra $b1 $curr}","highlight_start":13,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":24171,"byte_end":24284,"line_start":688,"line_end":691,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::pounded_var_names_with_context!{$call! $extra","highlight_start":9,"highlight_end":62},{"text":"            (@ $($tts)*)","highlight_start":1,"highlight_end":25},{"text":"            ($($tts)* @)","highlight_start":1,"highlight_end":25},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":32466,"byte_end":32539,"line_start":915,"line_end":915,"column_start":9,"column_end":82,"is_primary":false,"text":[{"text":"        $crate::pounded_var_names!{quote_bind_into_iter!(has_iter) () $($inner)*}","highlight_start":9,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30189,"byte_end":30261,"line_start":860,"line_end":860,"column_start":13,"column_end":85,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!{$tokens $b3 $b2 $b1 $curr $a1 $a2 $a3}","highlight_start":13,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29097,"byte_end":29396,"line_start":821,"line_end":829,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!{$tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":18136,"byte_end":18173,"line_start":520,"line_end":520,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            $crate::quote_each_token!{_s $($tt)*}","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":37404,"byte_end":37430,"line_start":1027,"line_end":1027,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":33981,"byte_end":34016,"line_start":948,"line_end":948,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        $crate::quote_token!{$curr $tokens}","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30189,"byte_end":30261,"line_start":860,"line_end":860,"column_start":13,"column_end":85,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!{$tokens $b3 $b2 $b1 $curr $a1 $a2 $a3}","highlight_start":13,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29097,"byte_end":29396,"line_start":821,"line_end":829,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!{$tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":18136,"byte_end":18173,"line_start":520,"line_end":520,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            $crate::quote_each_token!{_s $($tt)*}","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":37404,"byte_end":37430,"line_start":1027,"line_end":1027,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":33981,"byte_end":34016,"line_start":948,"line_end":948,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        $crate::quote_token!{$curr $tokens}","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30189,"byte_end":30261,"line_start":860,"line_end":860,"column_start":13,"column_end":85,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!{$tokens $b3 $b2 $b1 $curr $a1 $a2 $a3}","highlight_start":13,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29097,"byte_end":29396,"line_start":821,"line_end":829,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!{$tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":18136,"byte_end":18173,"line_start":520,"line_end":520,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            $crate::quote_each_token!{_s $($tt)*}","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\lib.rs","byte_start":1251,"byte_end":1298,"line_start":38,"line_end":38,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        quote! { format!(\"{:?}\", (#(&#sig.inputs),*)) }","highlight_start":9,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":17222,"byte_end":17240,"line_start":492,"line_end":492,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    macro_rules! quote {","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29020,"byte_end":29049,"line_start":819,"line_end":819,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29978,"byte_end":30016,"line_start":853,"line_end":853,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30772,"byte_end":30809,"line_start":883,"line_end":883,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":36993,"byte_end":37017,"line_start":1014,"line_end":1014,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":17222,"byte_end":17240,"line_start":492,"line_end":492,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    macro_rules! quote {","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29020,"byte_end":29049,"line_start":819,"line_end":819,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29978,"byte_end":30016,"line_start":853,"line_end":853,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30772,"byte_end":30809,"line_start":883,"line_end":883,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":36993,"byte_end":37017,"line_start":1014,"line_end":1014,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":17222,"byte_end":17240,"line_start":492,"line_end":492,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    macro_rules! quote {","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29020,"byte_end":29049,"line_start":819,"line_end":819,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":29978,"byte_end":30016,"line_start":853,"line_end":853,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":30772,"byte_end":30809,"line_start":883,"line_end":883,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::pounded_var_names!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":24084,"byte_end":24114,"line_start":686,"line_end":686,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! pounded_var_names {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::pounded_var_names_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":24326,"byte_end":24369,"line_start":697,"line_end":697,"column_start":1,"column_end":44,"is_primary":false,"text":[{"text":"macro_rules! pounded_var_names_with_context {","highlight_start":1,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::pounded_var_with_context!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":24568,"byte_end":24605,"line_start":707,"line_end":707,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! pounded_var_with_context {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_bind_into_iter!","def_site_span":{"file_name":"C:\\Users\\gaikw\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs","byte_start":25179,"byte_end":25212,"line_start":729,"line_end":729,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! quote_bind_into_iter {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:38:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        quote! { format!(\"{:?}\", (#(&#sig.inputs),*)) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `HasIterator`, found `ThereIsNoIteratorInRepetition`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected due to this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhere the type of `has_iter` is inferred to be `ThereIsNoIteratorInRepetition`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::quote_token_with_context` which comes from the expansion of the macro `quote` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 5 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0412, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0412, E0432.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
